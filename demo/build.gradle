apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.antfortune.freeline'

android {
    useLibrary 'org.apache.http.legacy'
    compileSdkVersion ANDROID_BUILD_SDK_VERSION as int
    buildToolsVersion ANDROID_BUILD_TOOLS_VERSION

    defaultConfig {
        minSdkVersion ANDROID_BUILD_MIN_SDK_VERSION as int
        targetSdkVersion ANDROID_BUILD_TARGET_SDK_VERSION as int
        versionCode VERSION_CODE as int
        versionName VERSION_NAME

        multiDexEnabled true

        ndk {
            abiFilters "armeabi"
        }
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dexOptions {
        javaMaxHeapSize "2048M"
        preDexLibraries = false
    }

    lintOptions {
        abortOnError false
        ignoreWarnings true
        disable "InvalidPackage"
        lintConfig file("lint.xml")
        disable 'MissingTranslation', 'ExtraTranslation'
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/ASL2.0'
        exclude 'LICENSE'
        exclude 'NOTICE'
    }

    signingConfigs {
        // gradle assembleRelease
        release {
            storeFile file(KEYSTORE_PATH)
            storePassword KEYSTORE_PASSWORD
            keyAlias KEYSTORE_ALIAS
            keyPassword KEYSTORE_ALIAS_PASSWORD
        }
    }

    buildTypes {
        release {
            zipAlignEnabled true
            shrinkResources true
            debuggable false
            jniDebuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    if (output.zipAlign != null) {
                        output.zipAlign.doLast {
                            output.zipAlign.inputFile.delete()
                        }
                    }

                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        def fileName = "app_${variant.productFlavors[0].name.replace("production", "release")}_v${variant.versionName}"
                        if (variant.buildType.name.equals("release")) {
                            fileName += ".apk"
                        } else {
                            fileName += "_${variant.buildType.name}.apk"
                        }
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }
        }
        debug {
            zipAlignEnabled false
            shrinkResources false
            debuggable true
            jniDebuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    productFlavors {
        // buildTypes 为 debug 时
        dev {
            buildConfigField "String", "APP_ENV_TIP", '"调试版"'
            buildConfigField "boolean", "CHANGE_ENV_ENABLE", "true"
        }

        // gradle assembleAlphaRelease
        alpha {
            buildConfigField "String", "APP_ENV_TIP", '"内测版"'
            buildConfigField "boolean", "CHANGE_ENV_ENABLE", "true"
        }

        // gradle assembleBetaRelease
        beta {
            buildConfigField "String", "APP_ENV_TIP", '"公测版"'
            buildConfigField "boolean", "CHANGE_ENV_ENABLE", "true"
        }

        // gradle assembleProductionRelease
        production {
            buildConfigField "String", "APP_ENV_TIP", '"正式版"'
            buildConfigField "boolean", "CHANGE_ENV_ENABLE", "false"
        }
    }

    productFlavors.all { flavor ->
//        flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name, UMENG_APPKEY_VALUE: "5824622df29d9859ce0034dd"]
    }

    freeline {
        hack true
        productFlavor 'dev'
        applicationProxy false
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':scaffolding')

    compile 'com.android.support:multidex:1.0.1'

    compile 'cn.bingoogolapple:bga-refreshlayout:1.1.7@aar'
    compile 'cn.bingoogolapple:bga-swipeitemlayout:1.0.4@aar'
    compile 'cn.bingoogolapple:bga-badgeview:1.1.3@aar'
    compile 'de.hdodenhof:circleimageview:2.1.0'
    compile 'com.github.bumptech.glide:glide:3.7.0'

    debugCompile "com.squareup.leakcanary:leakcanary-android:${LEAKCANARY_VERSION}"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:${LEAKCANARY_VERSION}"
    testCompile "com.squareup.leakcanary:leakcanary-android-no-op:${LEAKCANARY_VERSION}"
}